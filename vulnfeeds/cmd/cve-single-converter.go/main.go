// Package main converts a single CVE5 to OSV format
package main

import (
	"encoding/json"
	"flag"
	"os"

	"github.com/google/osv/vulnfeeds/cmd/cvelist2osv"
	"github.com/google/osv/vulnfeeds/cves"
	"github.com/google/osv/vulnfeeds/utility/logger"
)

var (
	jsonPath = flag.String("cve_json", "", "Path to CVEList JSON to examine.")
	outDir   = flag.String("out_dir", "", "Path to output results.")
)

func main() {
	flag.Parse()

	var logCleanup = logger.InitGlobalLogger("cvelist-osv", false)
	defer logCleanup()

	// Read the input CVE JSON file.
	data, err := os.ReadFile(*jsonPath)
	if err != nil {
		logger.Fatalf("Failed to open file: %v", err)
	}

	var cve cves.CVE5
	if err = json.Unmarshal(data, &cve); err != nil {
		logger.Fatalf("Failed to parse CVEList CVE JSON: %v", err)
	}

	// Perform the conversion and export the results.
	if err = cvelist2osv.ConvertAndExportCVEToOSV(cve, *outDir); err != nil {
		logger.Warnf("[%s]: Failed to generate an OSV record: %+v", cve.Metadata.CVEID, err)
	}
}
