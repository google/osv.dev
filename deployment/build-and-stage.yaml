# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(michaelkedar): This is intentionally separate from staging.yaml
# to not break existing deployment process as new one is implemented
# eventually, they can probably be combined

steps:
- name: gcr.io/cloud-builders/git
  args: ['submodule', 'update', '--init', '--recursive']

# Docker Image creation and tagging
# Build/push worker-base image if there's an update.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker pull gcr.io/oss-vdb/worker-base:latest || exit 0']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/oss-vdb/worker-base:latest', '-t', 'gcr.io/oss-vdb/worker-base:$COMMIT_SHA', '-f', 'docker/worker-base/Dockerfile', '--cache-from', 'gcr.io/oss-vdb/worker-base:latest', '--pull', '.']
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/worker-base']
# Build/push core worker/importer/exporter images.
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/worker:latest', '-t', 'gcr.io/oss-vdb/worker:$COMMIT_SHA', '-f', 'docker/worker/Dockerfile', '.']
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/worker']
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/importer:latest', '-t', 'gcr.io/oss-vdb/importer:$COMMIT_SHA', '.']
  dir: 'docker/importer'
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/importer']
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/exporter:latest', '-t', 'gcr.io/oss-vdb/exporter:$COMMIT_SHA', '.']
  dir: 'docker/exporter'
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/exporter']
# Build/push vulnfeeds images
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/alpine-cve-convert:latest', '-t', 'gcr.io/oss-vdb/alpine-cve-convert:$COMMIT_SHA', '-f', 'cmd/alpine/Dockerfile', '.']
  dir: 'vulnfeeds'
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/alpine-cve-convert']
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/combine-to-osv:latest', '-t', 'gcr.io/oss-vdb/combine-to-osv:$COMMIT_SHA', '-f', 'cmd/combine-to-osv/Dockerfile', '.']
  dir: 'vulnfeeds'
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/combine-to-osv']
# Build/push debian converter image
- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/oss-vdb/debian-convert:latest', '-t', 'gcr.io/oss-vdb/debian-convert:$COMMIT_SHA', '.']
  dir: 'vulnfeeds/tools/debian'
- name: gcr.io/cloud-builders/docker
  args: ['push', '--all-tags', 'gcr.io/oss-vdb/debian-convert']

# Apply Terraform config to staging environment
# TODO(michaelkedar): regenerate the api protobufs?
- name: gcr.io/oss-vdb/terraform
  args: ['init', '-no-color']
  dir:  deployment/terraform/environments/oss-vdb-test
- name: gcr.io/oss-vdb/terraform
  args: ['apply', '-no-color', '-auto-approve']
  dir:  deployment/terraform/environments/oss-vdb-test

# TODO(michaelkedar): App Engine for oss-vdb-test
# TODO(michaelkedar): Cloud Deploy

timeout: 7200s
# Also set in Cloud Build:
serviceAccount: 'projects/oss-vdb/serviceAccounts/deployment@oss-vdb.iam.gserviceaccount.com'
logsBucket: gs://oss-vdb-tf/apply-logs
options:
  machineType: N1_HIGHCPU_8

images:
  - 'gcr.io/oss-vdb/worker-base:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/worker:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/importer:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/exporter:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/alpine-cve-convert:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/combine-to-osv:$COMMIT_SHA'
  - 'gcr.io/oss-vdb/debian-convert:$COMMIT_SHA'
