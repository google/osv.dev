#!/bin/bash

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script executes a run of the NVD CVE to OSV conversion code.
# It operates over the latest available NVD dump and only the subset of years
# specified.
# It assumes it is running in a Docker container

echo "Commencing conversion run"

# Download NVD CVE dumps.
echo "Downloading NVD CVE dumps"
mkdir -p "${WORK_DIR}/nvd"
APIKEY="$(gcloud --project "$GOOGLE_CLOUD_PROJECT" secrets versions access latest --secret=nvd-api --format='get(payload.data)' | base64 -d)"
/usr/local/bin/download-cves --api_key "$APIKEY" --cvePath "${WORK_DIR}/nvd"

echo "Splitting monolithic file into years"
for (( YEAR = 2002 ; YEAR <= $(date +%Y) ; YEAR++ ))
do
  cat "${WORK_DIR}/nvd/nvdcve-2.0.json" \
    | jq \
      --arg year $YEAR \
      '{ "resultsPerPage": .vulnerabilities | map(select(.cve?.id? | startswith("CVE-" + $year + "-"))) | length, "startIndex": 0, "totalResults": .vulnerabilities | map(select(.cve?.id? | startswith("CVE-" + $year + "-"))) | length, "format": .format, "version": .version, "timestamp": .timestamp, "vulnerabilities": .vulnerabilities | map(select(.cve?.id? | startswith("CVE-" + $year + "-"))) }' > "${WORK_DIR}/nvd/nvdcve-2.0-${YEAR}.json" &
done

# Download latest CPE repo map.
echo "Downloading latest CPE Git repository map"
gcloud --no-user-output-enabled storage -q cp "${CPEREPO_GCS_PATH}" "${WORK_DIR}"

wait # for year-splitting to complete

# Dirty hack to get around https://stackoverflow.com/questions/68528541/env-variable-array
# https://stackoverflow.com/questions/9293887/reading-a-space-delimited-string-into-an-array-in-bash/9294015
IN_SCOPE_YEARS=($IN_SCOPE_YEARS)
for YEAR in "${IN_SCOPE_YEARS[@]}"; do
  # Run OSV record generation.
  echo "Converting NVD CVE records from ${YEAR} to OSV"
  /usr/local/bin/cpp \
    --cpe_repos "${WORK_DIR}/cpe_product_to_repo.json" \
    --nvd_json "${WORK_DIR}/nvd/nvdcve-2.0-${YEAR}.json" \
    --out_dir "${WORK_DIR}/nvd2osv/${YEAR}" \
    --out_format PackageInfo

  # Copy results to GCS bucket.
  echo "Copying NVD CVE records from ${YEAR} successfully converted to OSV to GCS"
  find "${WORK_DIR}/nvd2osv/${YEAR}" -type f -name \*.json \
    | gcloud --no-user-output-enabled storage -q cp -I "${OSV_OUTPUT_GCS_PATH}"

  # Copy conversion summary to GCS bucket.
  DURABLE_OUTCOMES_CSV="${OSV_OUTPUT_GCS_PATH}/nvd-conversion-outcomes-${YEAR}-$(date -Iminutes).csv"
  gcloud --no-user-output-enabled storage -q cp "${WORK_DIR}/nvd2osv/${YEAR}/outcomes.csv" "$DURABLE_OUTCOMES_CSV"

  echo "Results summary available at $DURABLE_OUTCOMES_CSV"
done

echo "Conversion run complete"
